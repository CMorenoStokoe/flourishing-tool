{"version":3,"sources":["assets/questionnaire.tsx","assets/gfx/logo-flourish.svg","assets/gfx/petal-flower.gif","assets/gfx/fe_dial_hand.svg","assets/gfx/fe_dial_face.svg","templates/splash.tsx","assets/gfx/bg.svg","assets/gfx/logo-petal.svg","templates/components.tsx","templates/welcome.tsx","assets/gfx/petal-flower-lg.gif","assets/gfx/petal-snapshot-lg.gif","assets/gfx/petal_axes.svg","templates/instructions.tsx","templates/questionnaire.tsx","assets/gfx/petal_EmotionalHealth.svg","assets/gfx/petal_PhysicalHealth.svg","assets/gfx/petal_SocialHealth.svg","assets/labels.tsx","assets/gfx/petal_SpiritualHealth.svg","assets/gfx/petal_CognitiveHealth.svg","assets/gfx/flourishing_bulb_petal.svg","assets/gfx/flourishing_outline_petal.svg","assets/gfx/flourishing_red_petal.svg","assets/gfx/flourishing_yellow_petal.svg","assets/gfx/flourishing_orange_petal.svg","assets/gfx/flourishing_cyan_petal.svg","assets/gfx/flourishing_navy_petal.svg","assets/gfx/petal_s1.svg","assets/gfx/petal_s2.svg","assets/gfx/petal_s3.svg","assets/gfx/petal_s5.svg","assets/gfx/petal_s4.svg","templates/results.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["questions","q1","id","text","axis","score","q2","q3","q4","q5","q6","q7","q8","q9","q10","q11","q12","q13","q14","q15","q16","q17","q18","q19","q20","q21","q22","q23","q24","q25","q26","q27","q28","q29","q30","q31","q32","q33","q34","q35","TV","props","TVClass","showTV","className","style","background","boxShadow","borderColor","borderWidth","onClick","onTurnDial","display","filter","children","width","height","src","dialFace","dialHand","Splash","logo","flowerGIF","fontFamily","textShadow","ThemeButton","concat","variant","animateAfter","animationDelay","petalLogo","value","Welcome","bg","backgroundRepeat","backgroundAttachment","backgroundPosition","backgroundSize","start","demo","Instructions","snapshotGIF","wellbeingAxesImage","Question","n","question","type","name","updateAnswer","Questionnaire","answersThisPage","q","progress","renderedQuestions","count","push","renderQuestions","length","Object","entries","alert","continue","back","labels","PhysicalHealth","title","subtitle","color","icon","SpiritualHealth","SocialHealth","EmotionalHealth","CognitiveHealth","ToggleAnswersButton","useState","pressed","setPressed","Label","pos","y","x","top","left","toFixed","label","Graph","w","a","Math","PI","centerBulb","scalePetal","scaledArea","scaledRadius","sqrt","r","d","pointOnCirc","o","c","cos","rad","sin","place","angle","petal","offset","coords","transform","write","graph","bulb","petalOutline","petalForPH","scores","petalForEH","petalForCH","petalForSpH","petalForSoH","Answers","answers","scoreIcons","s1","s2","s3","s4","s5","responses","key","console","log","whiteSpace","Results","showResponses","setShowResponses","newCode","setNewCode","viewMeasure","onChange","e","target","loadResults","code","size","readOnly","App","view","setView","recordedAnswers","recordAnswers","setProgress","setCode","remainingQuestions","unansweredQuestions","sample","shuffled","sort","random","min","slice","scoreResponses","calcAve","thisAxis","leadingLetter","encodeResponses","codeString","copyOfAnswers","JSON","parse","stringify","toString","loadResponses","lengthOfQuestionnaire","codeLikelyValid","newResponses","i","Number","getResponsesFromCode","isViewActive","newAnswer","generatedCode","formContinueAction","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.159dab10.chunk.js","sourcesContent":["import {question} from '../model/types';\r\n\r\nexport const questions: Record<string, question> = {\r\n    q1:{id:'q1', text:`I have a high level of physical energy`, axis:'PhysicalHealth', score:0},\r\n    q2:{id:'q2', text:`When I wake up, I feel rested and ready for a new day`, axis:'PhysicalHealth', score:0},\r\n    q3:{id:'q3', text:`I like exercising and do so regularly every week`, axis:'PhysicalHealth', score:0},\r\n    q4:{id:'q4', text:`My eating and drinking habits are healthy`, axis:'PhysicalHealth', score:0},\r\n    q5:{id:'q5', text:`My routines for exercising are well set up`, axis:'PhysicalHealth', score:0},\r\n    q6:{id:'q6', text:`I have regular ‘rests’ where I take time to relax and do my favourite thing(s)`, axis:'PhysicalHealth', score:0},\r\n    q7:{id:'q7', text:`I sleep at least seven hours most days`, axis:'PhysicalHealth', score:0},\r\n    q8:{id:'q8', text:`I feel fit and healthy`, axis:'PhysicalHealth', score:0},\r\n    q9:{id:'q9', text:`I have activities that help me recharge my batteries`, axis:'PhysicalHealth', score:0},\r\n    q10:{id:'q10', text:`I find it easy to concentrate and focus on my work`, axis:'CognitiveHealth', score:0},\r\n    q11:{id:'q11', text:`I manage my time effectively and well`, axis:'CognitiveHealth', score:0},\r\n    q12:{id:'q12', text:`I have a positive outlook on life`, axis:'CognitiveHealth', score:0},\r\n    q13:{id:'q13', text:`I try to find solutions to problems and issues`, axis:'CognitiveHealth', score:0},\r\n    q14:{id:'q14', text:`I can easily switch off when I take a break or in the evening`, axis:'CognitiveHealth', score:0},\r\n    q15:{id:'q15', text:`I don’t overthink or overanalyze things`, axis:'CognitiveHealth', score:0},\r\n    q16:{id:'q16', text:`I can recognize and name many of the emotions I experience (positive and negative)`, axis:'EmotionalHealth', score:0},\r\n    q17:{id:'q17', text:`I am happy with all my emotions (negative and positive) and welcome them`, axis:'EmotionalHealth', score:0},\r\n    q18:{id:'q18', text:`I can regulate my emotions and can express them in a healthy way`, axis:'EmotionalHealth', score:0},\r\n    q19:{id:'q19', text:`I feel connected to others and know who to reach out to when I am feeling sad or upset`, axis:'EmotionalHealth', score:0},\r\n    q20:{id:'q20', text:`I create good relationships with others`, axis:'SocialHealth', score:0},\r\n    q21:{id:'q21', text:`I get along with my friends`, axis:'SocialHealth', score:0},\r\n    q22:{id:'q22', text:`I get along with my family`, axis:'SocialHealth', score:0},\r\n    q23:{id:'q23', text:`I feel confident`, axis:'SocialHealth', score:0},\r\n    q24:{id:'q24', text:`I enjoy speaking in public`, axis:'SocialHealth', score:0},\r\n    q25:{id:'q25', text:`I have good friends with whom I can share my issues easily`, axis:'SocialHealth', score:0},\r\n    q26:{id:'q26', text:`I can manage conflict and focus on getting everyone’s needs met`, axis:'SocialHealth', score:0},\r\n    q27:{id:'q27', text:`I have a passion/hobby I engage with on a regular basis`, axis:'SpiritualHealth', score:0},\r\n    q28:{id:'q28', text:`I know what I want to achieve in life`, axis:'SpiritualHealth', score:0},\r\n    q29:{id:'q29', text:`I have a sense of purpose in life`, axis:'SpiritualHealth', score:0},\r\n    q30:{id:'q30', text:`I know what my personal values are in life`, axis:'SpiritualHealth', score:0},\r\n    q31:{id:'q31', text:`I set goals which are aligned with my personal values`, axis:'SpiritualHealth', score:0},\r\n    q32:{id:'q32', text:`I have a fulfilling life`, axis:'SpiritualHealth', score:0},\r\n    q33:{id:'q33', text:`I enjoy reconnecting to nature on a regular basis`, axis:'SpiritualHealth', score:0},\r\n    q34:{id:'q34', text:`I believe I am learning and growing every day`, axis:'SpiritualHealth', score:0},\r\n    q35:{id:'q35', text:`I believe I am a compassionate human being`, axis:'SpiritualHealth', score:0},\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-flourish.e45d75c0.svg\";","export default __webpack_public_path__ + \"static/media/petal-flower.2bc17ffe.gif\";","export default __webpack_public_path__ + \"static/media/fe_dial_hand.0a2bc10a.svg\";","export default __webpack_public_path__ + \"static/media/fe_dial_face.1d9d2461.svg\";","import {ThemeButton} from './components';\r\nimport flowerGIF from '../assets/gfx/petal-flower.gif';\r\nimport dialHand from '../assets/gfx/fe_dial_hand.svg';\r\nimport dialFace from '../assets/gfx/fe_dial_face.svg';\r\nimport logo from '../assets/gfx/logo-flourish.svg';\r\nimport { Children } from 'react';\r\n\r\nexport function TV(props:{\r\n    showTV: boolean;\r\n    children: JSX.Element;\r\n    onClick: {\r\n        onTurnDial: Function;\r\n    }\r\n}):JSX.Element {\r\n    const TVClass = ():string => {\r\n        if(props.showTV){\r\n            return 'TV'\r\n        } else {\r\n            return 'TV TV-hide'\r\n        }\r\n    }\r\n    return(\r\n        <div className='w-full h-full relative justify-center items-center'>\r\n\r\n            <div id='TV-border' \r\n                className={`w-full h-full ${TVClass()}`}\r\n                style={{\r\n                    background: '#FAF1E6' //'linear-gradient(41deg, #92B4EC 0%, #92B4EC 45%, #2D4059 55%, #184D47 100%)'\r\n                }}>\r\n                <div id='TV'\r\n                    className={`w-full h-full p-1 lg:p-8 lg:pr-2 flex flex-col lg:flex-row rounded-xl border-r-2 border-t-2 ${TVClass()}`}\r\n                    style={{\r\n                        boxShadow: '0px 0px 20px #000000',\r\n                        borderColor: '#FAF1E6',\r\n                        background: 'linear-gradient(41deg, #f1cc5d 0%, #f1cc5d 40%, #CBA92B 45%, #CBA92B 100%)'\r\n                    }}\r\n                >\r\n                    <div id='TV-inner'\r\n                        className={`lg:px-12 lg:py-6 flex-grow shadow-inner rounded-xl ${TVClass()}`}\r\n                        style={{\r\n                            background: 'linear-gradient(41deg, #FFE69A 0%, #FFE69A 49%, #d8c384 51%, #d8c384 100%)' //'linear-gradient(41deg, #f6c840 0%, #f6c840 49%, #FFD24C 51%, #FFD24C 100%)'\r\n                        }}\r\n                    >\r\n                        <div id='Screen'\r\n                            className={`w-full h-full p-1 lg:p-12 shadow-inner rounded-xl ${TVClass()}`}\r\n                            style={{\r\n                                background: 'linear-gradient(41deg, #d8c384 0%, #d8c384 49%, #beb086 51%, #beb086 100%)' //'linear-gradient(41deg, #FFD24C 0%, #FFD24C 49%, #e0b42e 51%, #e0b42e 100%)' \r\n                            }}\r\n                        >\r\n                            <div id='Screen-outer'\r\n                                className={`w-full h-full border-black relative bg-black rounded-3xl ${TVClass()}`}\r\n                                style={{\r\n                                    borderWidth: '20px'\r\n                                }}\r\n                                onClick={()=>{ if(props.showTV){ props.onClick.onTurnDial() }}}\r\n                            >\r\n                                <div id='Screen-inner'\r\n                                    className='w-full h-full absolute shadow-inner rounded-3xl z-50'\r\n                                    style={{\r\n                                        background: 'radial-gradient(circle, rgba(0,0,0,0) 60%, rgba(0,0,0,0.5) 100%)',\r\n                                        display: `${props.showTV ? 'flex' : 'none'}`\r\n                                    }}\r\n                                />\r\n                                <div id='Screen-noise'\r\n                                    className='w-full h-full absolute rounded-3xl z-50 noisy'\r\n                                    style={{\r\n                                        display: `${props.showTV ? 'flex' : 'none'}`\r\n                                    }}\r\n                                />\r\n\r\n                                <div id='CurrentView' \r\n                                    className={`h-full min-h-full bg-white filter rounded-3xl ${props.showTV ? 'crt-g r id':''} ${TVClass()}`}\r\n                                    style={{filter:'grayscale(75%)'}}\r\n                                >\r\n                                    {props.children}\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> \r\n\r\n                    <div id='SidePanel'\r\n                        className={`pt-2 lg:p-8 flex flex-row lg:flex-col flex-grow-0 justify-center items-center lg:justify-between overflow-hidden ${TVClass()}`}\r\n                        style={{\r\n                            width: `${props.showTV ? 'auto' : '0px'}`,\r\n                            height: `${props.showTV ? 'auto' : '0px'}`\r\n                        }}\r\n                    >\r\n                        <div id='Speaker'\r\n                            className='hidden lg:block shadow-inner w-36 h-52 p-2 rounded-full border-r-2 border-t-2'\r\n                            style={{\r\n                                borderColor: '#FAF1E6',\r\n                                background: `repeating-linear-gradient(\r\n                                    180deg,\r\n                                    #beb086,\r\n                                    #beb086 5px,\r\n                                    rgba(0,0,0,0.5) 5px,\r\n                                    rgba(0,0,0,0.5) 10px\r\n                                )`\r\n                            }}\r\n                        />\r\n                        <div>\r\n                            <div id='Dials' className='w-44 h-44 relative animate__animated animate__pulse animate__delay-5s animate__repeat-3'>\r\n                                <img \r\n                                    src={dialFace} \r\n                                    className='absolute top-0 left-0 w-full h-full' \r\n                                    style={{\r\n                                        filter: 'drop-shadow(0px 0px 0.25rem #FAF1E6)'\r\n                                    }}\r\n                                />\r\n                                <img \r\n                                    src={dialHand} \r\n                                    onClick={()=>{props.onClick.onTurnDial()}} \r\n                                    className='absolute ml-2 mb-2 p-2 top-16 left-2 h-3/5 w-3/5 cursor-pointer animate-dial' \r\n                                    style={{}}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Splash(props:{\r\n    onClick: {\r\n        start: Function;\r\n    }\r\n}):JSX.Element {\r\n    return(\r\n        <div className='w-full h-full relative flex flex-col justify-center items-center overflow-hidden '>\r\n            <div className='w-full h-full p-4 flex flex-col justify-between items-center transition-all animate__animated animate__zoomInDown animate__delay-1s'>\r\n                    \r\n                <img className='m-2 h-12 self-start' src={logo} />\r\n                <img className='h-52' src={flowerGIF} />\r\n                <h1 className='p-4 text-3xl lg:text-5xl crt-text text-spring-400' \r\n                style={{\r\n                    fontFamily:'Lobster Two, cursive', \r\n                    textShadow:'0px 4px #000000'\r\n                }}>\r\n                    Tune into your wellbeing today!\r\n                </h1>\r\n                <h1 className='lg:hidden text-xl' style={{\r\n                    fontFamily:'Lobster Two, cursive', \r\n                    textShadow:'0px 0px 1px #000000'\r\n                }}>\r\n                    Tap to continue\r\n                </h1>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/bg.927c3b69.svg\";","export default __webpack_public_path__ + \"static/media/logo-petal.8a41023e.svg\";","import petalLogo from '../assets/gfx/logo-petal.svg'\r\n\r\nexport function ThemeButton(props:{\r\n    value: string,\r\n    onClick: Function,\r\n    animateAfter?: string,\r\n    className?: string,\r\n    variant?: 'alt' | 'default'\r\n}):JSX.Element{\r\n    const defaultColors = 'bg-spring-300 text-white hover:bg-orange hover:text-white ';\r\n    const altColors =  'bg-orange text-white hover:bg-spring-300 hover:text-black ';\r\n    return(\r\n        <button \r\n            className={'m-4 p-3 rounded-xl '.concat(\r\n                props.variant==='alt' ? altColors : defaultColors, \r\n                props.animateAfter ? ' animate__animated animate__jello ' : '',\r\n                props.className ? props.className : ''\r\n            )} \r\n            style={{animationDelay: props.animateAfter ? props.animateAfter : 'none'}}\r\n            onClick={()=>{props.onClick()}}>\r\n            <img src={petalLogo} className='mr-2 w-8 h-auto inline'/>\r\n            <h1 className='inline'>{props.value}</h1>\r\n        </button>\r\n    )\r\n}","import bg from '../assets/gfx/bg.svg';\r\nimport {ThemeButton} from './components';\r\nimport flowerGIF from '../assets/gfx/petal-flower.gif';\r\n\r\nexport function Welcome(props:{\r\n    onClick: {\r\n        start: Function;\r\n        demo: Function;\r\n    }\r\n}):JSX.Element {\r\n    return(\r\n        <div className='w-full h-3/4 relative flex flex-col justify-center items-center '>\r\n            \r\n            <div className='absolute top-1/2 animate__animated animate__fadeOut animate__delay-1s'>\r\n                <img className='h-12 inline' src={flowerGIF} />\r\n            </div>\r\n\r\n            <div className='absolute top-0 w-full h-full flex flex-col justify-center items-center transition-all animate__animated animate__fadeIn animate__delay-1s' style={{\r\n                background: `url(${bg})`, \r\n                backgroundRepeat: 'no-repeat', \r\n                backgroundAttachment: 'fixed',\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'auto 75%'\r\n            }}>\r\n                <div className='m-2 p-8 rounded bg-spring-400 text-white shadow-xl'>\r\n                    <h1 className='p-2 text-3xl'>\r\n                        Flourish!\r\n                    </h1>\r\n                    <p className='p-2 text-lg'>\r\n                        Improve your wellbeing with this 5 minute quiz.\r\n                        <br/>Designed to empower <strong>all</strong> young people and adults to flourish.\r\n                    </p>\r\n\r\n                    <ThemeButton value='Begin here' variant='default' animateAfter='0ms' onClick={props.onClick.start}/>\r\n                    <br/>\r\n                    <button className='text-spring-200 hover:text-spring-100' onClick={()=>{props.onClick.demo()}}>\r\n                        ...or click here to load the demo!\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/petal-flower-lg.55e4f803.gif\";","export default __webpack_public_path__ + \"static/media/petal-snapshot-lg.5ea3b092.gif\";","export default __webpack_public_path__ + \"static/media/petal_axes.e1cc53fa.svg\";","import flowerGIF from '../assets/gfx/petal-flower-lg.gif';\r\nimport snapshotGIF from '../assets/gfx/petal-snapshot-lg.gif';\r\nimport wellbeingAxesImage from '../assets/gfx/petal_axes.svg';\r\nimport petalLogo from '../assets/gfx/logo-petal.svg'\r\nimport { ThemeButton } from './components';\r\n\r\nexport function Instructions (props:{\r\n    onClick:{\r\n        start: Function;\r\n    }\r\n}){\r\n    return(\r\n        <div className='p-4 flex justify-center animate__animated animate__fadeIn'>\r\n            <div className='flex flex-col items-center bg-spring-100 rounded text-left'>\r\n                <h1 className='m-2 mb-0 p-2 pb-0 text-4xl text-spring-400 text-center lg:text-left'>What should I expect?</h1>\r\n                <div className='m-2 mt-0 mb-4 p-2 pt-0 flex flex-row items-center'>\r\n                    <img className='h-24' src={snapshotGIF}/>\r\n                    <h1 className='pt-12 max-w-sm'><strong>This five minute quiz will give you a snapshot of your current wellbeing.</strong></h1>\r\n                </div>\r\n                <div className='p-2 w-full flex flex-col items-center justify-center rounded shadow-inner bg-spring-200'>\r\n                    <strong className='p-2'>Identify areas for growth.</strong>\r\n                    <img src={wellbeingAxesImage} className='p-2 max-w-md'/>\r\n                    <p className='p-2 max-w-md'>Understand your thoughts and behaviours relating to your body, mind, emotions, social relationships, and to society more widely (we call this spiritual wellbeing).</p>\r\n                </div>\r\n                <div className='m-2 p-2 flex flex-row items-center'>\r\n                    <img src={flowerGIF} className='h-24'/>\r\n                    <h1 className='max-w-sm'><strong>Be honest with yourself. </strong> The aim is to grow and develop, to see where you can introduce healthy habits in your life!</h1>\r\n                </div>\r\n                <ThemeButton value='Take the quiz!' animateAfter='5s' onClick={()=>{props.onClick.start()}} />\r\n            </div>\r\n        </div>        \r\n    )\r\n}","import {question} from '../model/types';\r\nimport { ThemeButton } from './components';\r\n\r\nfunction Question(props:{\r\n    question: question;\r\n    n: number;\r\n    onClick: {\r\n        updateAnswer: Function;\r\n    }\r\n}):JSX.Element{\r\n    return(\r\n        <div className='p-2 m-2 d-flex flex-col'>\r\n            <p className='animate__animated animate__flipInX'  style={{animationDelay: `${props.n/4}s`}}>\r\n                {props.question.text}\r\n            </p>\r\n            <div className='p-1 d-flex flex-row text-xs text-gray-500 animate__animated animate__fadeIn' style={{animationDelay: `${props.n/4+0.1}s`}}>\r\n                Strongly disagree\r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_1`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 1)}}/>\r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_2`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 2)}}/> \r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_3`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 3)}}/> \r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_4`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 4)}}/> \r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_5`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 5)}}/> \r\n                Strongly agree\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Questionnaire(props:{\r\n    questions: question[]; // Five questions\r\n    progress: number;\r\n    onClick: {\r\n        continue: Function;\r\n        back: Function;\r\n    }\r\n}):JSX.Element{\r\n    // Set answers\r\n    let answersThisPage: Record<string, question> = {};\r\n    for(const q of props.questions){\r\n        answersThisPage[q.id] = q;\r\n    };\r\n\r\n    // Validate answers\r\n    const validateFormAndContinue = () => {\r\n        for(const [key, value] of Object.entries(answersThisPage)){\r\n            if(value.score===0){\r\n                alert('Please answer all questions before continuing!');\r\n                return;\r\n            }\r\n        };\r\n        props.onClick.continue(Object.entries(answersThisPage));\r\n    }\r\n\r\n    // Render questions on page\r\n    const renderQuestions = (): JSX.Element => {\r\n        const renderedQuestions: JSX.Element[] = [];\r\n        var count = 0;\r\n        for(const q of props.questions){\r\n            renderedQuestions.push(\r\n                <Question \r\n                    n={count}\r\n                    question={q}\r\n                    key={q.id}\r\n                    onClick={{\r\n                        updateAnswer: (id:string, score:number) => {answersThisPage[id].score = score}\r\n                    }}\r\n                />\r\n            );\r\n            count +=1;\r\n        }\r\n        return(\r\n            <div className='flex flex-col items-center'>\r\n                <div className='p-4 rounded shadow bg-white'> \r\n                    {renderedQuestions}\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    if(props.progress<100){\r\n        return(\r\n            <div>\r\n                {renderQuestions()}\r\n                <ThemeButton \r\n                    value={props.questions.length < 5 ? 'Finish' : 'Continue'}\r\n                    animateAfter='1s'\r\n                    onClick={validateFormAndContinue}\r\n                />\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className='h-3/4 flex flex-col justify-center items-center'>\r\n                <div className='p-4 m-2 max-w-lg rounded bg-spring-400 text-white'>\r\n                    <h1 className='m-2 text-2xl'>\r\n                        All done! \r\n                    </h1>\r\n                    <h1 className='m-2 text-lg'>\r\n                        Click below to continue to see your results or refresh the web page to start again.\r\n                    </h1>\r\n                    <ThemeButton value='View results' onClick={()=>{props.onClick.back()}}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/petal_EmotionalHealth.bf985abb.svg\";","export default __webpack_public_path__ + \"static/media/petal_PhysicalHealth.a946e99a.svg\";","export default __webpack_public_path__ + \"static/media/petal_SocialHealth.4b92185f.svg\";","import EmotionalHealth from '../assets/gfx/petal_EmotionalHealth.svg';\r\nimport PhysicalHealth from '../assets/gfx/petal_PhysicalHealth.svg';\r\nimport SocialHealth from '../assets/gfx/petal_SocialHealth.svg';\r\nimport SpiritualHealth from '../assets/gfx/petal_SpiritualHealth.svg';\r\nimport CognitiveHealth from '../assets/gfx/petal_CognitiveHealth.svg';\r\n\r\nexport interface graphLabel {\r\n    title: string;\r\n    subtitle: string;\r\n    color: string;\r\n    icon: string;\r\n}\r\n\r\nexport const labels:Record<'PhysicalHealth' | 'SpiritualHealth' | 'SocialHealth' | 'EmotionalHealth' | 'CognitiveHealth', graphLabel> = {\r\n    PhysicalHealth: {\r\n        title: 'Physical Health',\r\n        subtitle: 'How well you take care of your body and reduce risk of illness and injury.',\r\n        color: '#EA5455',\r\n        icon: PhysicalHealth\r\n    },\r\n    SpiritualHealth:{\r\n        title: 'Spiritual Health',\r\n        subtitle: 'Noticing our passions and purpose or connection with wider society.',\r\n        color: '#2D4059',\r\n        icon: SpiritualHealth\r\n    },\r\n    SocialHealth:{\r\n        title: 'Social Health',\r\n        subtitle: 'Taking care of social relationships and support networks.',\r\n        color: '#FFB400',\r\n        icon: SocialHealth\r\n    },\r\n    EmotionalHealth:{\r\n        title: 'Emotional Health',\r\n        subtitle: 'Feeling in control of your emotions.',\r\n        color: '#F07B3F',\r\n        icon: EmotionalHealth\r\n    },\r\n    CognitiveHealth:{\r\n        title: 'Cognitive Health',\r\n        subtitle: 'Adopting a healthy mindset and outlook on life.',\r\n        color: '#00B8A9',\r\n        icon: CognitiveHealth\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/petal_SpiritualHealth.59181db5.svg\";","export default __webpack_public_path__ + \"static/media/petal_CognitiveHealth.d288a96c.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_bulb_petal.66e30c15.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_outline_petal.6c9bbf3d.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_red_petal.6cc564b5.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_yellow_petal.3e9fb60d.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_orange_petal.11302a82.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_cyan_petal.0dea1b24.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_navy_petal.8dcb58be.svg\";","export default __webpack_public_path__ + \"static/media/petal_s1.c852f521.svg\";","export default __webpack_public_path__ + \"static/media/petal_s2.402c6238.svg\";","export default __webpack_public_path__ + \"static/media/petal_s3.5de2361e.svg\";","export default __webpack_public_path__ + \"static/media/petal_s5.0cccec0e.svg\";","export default __webpack_public_path__ + \"static/media/petal_s4.df10534b.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport {question, questionnaire, results} from '../model/types';\r\nimport {questions} from '../assets/questionnaire';\r\nimport { ThemeButton } from \"./components\";\r\n// Import assets\r\nimport {labels, graphLabel} from '../assets/labels';\r\nimport bulb from '../assets/gfx/flourishing_bulb_petal.svg';\r\nimport petalOutline from '../assets/gfx/flourishing_outline_petal.svg';\r\nimport petalForPH from '../assets/gfx/flourishing_red_petal.svg';\r\nimport petalForSoH from '../assets/gfx/flourishing_yellow_petal.svg';\r\nimport petalForEH from '../assets/gfx/flourishing_orange_petal.svg';\r\nimport petalForCH from '../assets/gfx/flourishing_cyan_petal.svg';\r\nimport petalForSpH from '../assets/gfx/flourishing_navy_petal.svg';\r\nimport s1 from '../assets/gfx/petal_s1.svg';\r\nimport s2 from '../assets/gfx/petal_s2.svg';\r\nimport s3 from '../assets/gfx/petal_s3.svg';\r\nimport s4 from '../assets/gfx/petal_s5.svg';\r\nimport s5 from '../assets/gfx/petal_s4.svg';\r\nimport flowerGIF from '../assets/gfx/petal-flower.gif';\r\n\r\nfunction ToggleAnswersButton(props:{\r\n    onClick: Function;\r\n}):JSX.Element{\r\n    const [pressed, setPressed] = useState<boolean>(false);\r\n    return(\r\n        <button \r\n            className={`\r\n                m-2 p-3 rounded-xl bg-gray-800 text-white justify-self-end transition-all duration-500\r\n                ${pressed ? \"bg-red-600\" : \"bg-gray-800\"}\r\n            ` }\r\n            onClick={()=>{\r\n                props.onClick();\r\n                setPressed(!pressed);\r\n            }}>\r\n            <h1>{pressed ? 'Hide' : 'Show'}</h1>\r\n        </button>\r\n    )\r\n}\r\n\r\nfunction Label(props:{\r\n    label: graphLabel;\r\n    pos:{\r\n        x:number;\r\n        y:number;\r\n    };\r\n    score: number;\r\n}):JSX.Element{\r\n    const colourByScore= (n:number):string => {\r\n        if(n<2.5){\r\n            return('coral');\r\n        }else if(n<3.5){\r\n            return('gold');\r\n        }else{\r\n            return('green')\r\n        }\r\n    }\r\n    return(\r\n        <div className={`p-2 lg:py-${props.pos.y*4} lg:pr-${props.pos.x*4} w-52 max-w-52 text-xs relative flex flex-col justify-center items-center`}>\r\n            <div className='flex flex-col items-center'>\r\n                <p className='p-1 rounded-full relative border border-white shadow' style={{color:'white', background: colourByScore(props.score), top:'1rem', left:'1rem'}}>\r\n                    {props.score.toFixed(1)}\r\n                </p>\r\n                <img src={props.label.icon} className='h-8 w-auto'/>\r\n            </div>\r\n            <h1 className='font-medium' style={{display: 'inline'}}>\r\n                {props.label.title}\r\n            </h1>\r\n            <hr style={{borderColor: props.label.color}}/>\r\n            <p className='font-light'>\r\n                {props.label.subtitle}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Compile graph of results\r\nfunction Graph(props:{\r\n    scores: results;\r\n}){\r\n    // Base widths (w) and areas (a)\r\n    const w = {container: 14, bulb: 6, petal: 2.5};\r\n    const a = {bulb: Math.PI * w.bulb ^ 2, petal: Math.PI * w.petal ^ 2};\r\n    const scaleFactor = 1; // How much to scale petal areas by (e.g., scaleFactor * score * a.petal = area)\r\n    // Geometric calculations\r\n    const centerBulb  = ():number => { // Find center of canvas\r\n        return (w.container / 2) - (w.bulb / 2); \r\n    };\r\n    const scalePetal = (score: number):{r:number, d:number, a:number} => {\r\n        const scaledArea = a.petal * scaleFactor * score;\r\n        const scaledRadius = Math.sqrt( scaledArea / Math.PI );\r\n        return ({\r\n            r: scaledRadius,\r\n            d: scaledRadius * 2,\r\n            a: scaledArea\r\n        })\r\n    }\r\n    const pointOnCirc = (o:{c: number, r: number, rad:number}) => {\r\n        return({\r\n            x: o.c + o.r * Math.cos(o.rad), // Adjust centre\r\n            y: o.c + o.r * Math.sin(o.rad)\r\n        })\r\n    }\r\n    // Draw graph elements\r\n    const place = (score:number, angle:number):{width: string, top: string, left: string, transform: string} => {\r\n        const petal = scalePetal(score);\r\n        const offset:{x:number, y:number} = {x: 0, y: 0};\r\n        var coords = pointOnCirc({c:w.container/2,  r: (w.bulb/2) + (petal.r*.5), rad:angle*Math.PI/180});\r\n            coords.x += offset.x;\r\n            coords.y += offset.y;\r\n        return({ // Position on canvas\r\n            width: `${petal.d}rem`,\r\n            left: `${coords.x}rem`,\r\n            top: `${coords.y}rem`,\r\n            transform: `translate(-50%, -50%) rotate(${angle-270}deg)`\r\n        })\r\n    }\r\n    const write = (score:number, angle:number):{top: string, left: string, transform: string, color: string, background: string, textShadow: string} => {\r\n        const petal = scalePetal(score);\r\n        const offset:{x:number, y:number} = {x: 0, y: 0};\r\n        var coords = pointOnCirc({c:w.container/2,  r: (w.bulb/2) + (petal.r*.5), rad:angle*Math.PI/180});\r\n            coords.x += offset.x;\r\n            coords.y += offset.y;\r\n        return({ // Position on canvas\r\n            left: `${coords.x}rem`,\r\n            top: `${coords.y}rem`,\r\n            transform: `translate(-50%, -50%)`,\r\n            color: 'white',\r\n            background: 'none',\r\n            textShadow: '0px 0px 3px black'\r\n        })\r\n    }\r\n    const graph = ():JSX.Element => { return (\r\n        <div id='graph' className={`mx-8 w-56 relative`} style={{height:'14rem'}}>\r\n            {\r\n                // Central bulb\r\n            }\r\n            <img src={bulb} className='absolute h-auto z-10' style={{width: `${w.bulb}rem`, top:`${centerBulb()}rem`, left:`${centerBulb()}rem`}}/>\r\n            {\r\n                // Petal outlines\r\n            }\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 270)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 342)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 54)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 126)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 198)}/>\r\n            {\r\n                // Petals showing score\r\n            }\r\n            <img src={petalForPH} className='absolute h-auto' style={place(props.scores.PhysicalHealth, 270)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.PhysicalHealth, 270)}>{props.scores.PhysicalHealth.toFixed(1)}</h1>\r\n            <img src={petalForEH} className='absolute h-auto' style={place(props.scores.EmotionalHealth, 342)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.EmotionalHealth, 342)}>{props.scores.EmotionalHealth.toFixed(1)}</h1>\r\n            <img src={petalForCH} className='absolute h-auto' style={place(props.scores.CognitiveHealth, 54)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.CognitiveHealth, 54)}>{props.scores.CognitiveHealth.toFixed(1)}</h1>\r\n            <img src={petalForSpH} className='absolute h-auto' style={place(props.scores.SpiritualHealth, 126)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.SpiritualHealth, 126)}>{props.scores.SpiritualHealth.toFixed(1)}</h1>\r\n            <img src={petalForSoH} className='absolute h-auto' style={place(props.scores.SocialHealth, 198)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.SocialHealth, 198)}>{props.scores.SocialHealth.toFixed(1)}</h1>\r\n        </div>\r\n    )}\r\n    return(\r\n        <div className='flex flex-col lg:flex-row justify-center items-center'>\r\n            <div id='Graph(Mobile)' className='pt-4 block lg:hidden animate__animated animate__bounceIn animate__delay-2s'>{graph()}</div>\r\n            {\r\n                // Labels (left)\r\n            }\r\n            <div id='Labels1-3' className='animate__animated animate__fadeIn animate__delay-3s'>\r\n                <Label label={labels.PhysicalHealth} pos={{x:1,y:0}} score={props.scores.PhysicalHealth}/>\r\n                <Label label={labels.SocialHealth} pos={{x:2,y:1}} score={props.scores.SocialHealth}/>\r\n                <Label label={labels.SpiritualHealth} pos={{x:0,y:0}} score={props.scores.SpiritualHealth}/>\r\n            </div>\r\n            <div id='Graph(Desktop)' className='hidden lg:block animate__animated animate__bounceIn animate__delay-2s'>{graph()}</div>\r\n            <div id='Labels4-5' className='animate__animated animate__fadeIn animate__delay-3s'>\r\n                <Label label={labels.EmotionalHealth} pos={{x:0,y:2}} score={props.scores.EmotionalHealth}/>\r\n                <Label label={labels.CognitiveHealth} pos={{x:0,y:1}} score={props.scores.CognitiveHealth}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Compile list of answers\r\nfunction Answers(props:{responses: questionnaire; scores: results;}){\r\n    var answers: Record<string, JSX.Element[]> = {\r\n        PhysicalHealth: [],\r\n        EmotionalHealth: [],\r\n        CognitiveHealth: [],\r\n        SpiritualHealth: [],\r\n        SocialHealth: []\r\n    };\r\n    var count = 1;\r\n    const scoreIcons = ['',s1,s2,s3,s4,s5];\r\n    for(const [key, value] of Object.entries(props.responses)){\r\n        console.log(value.score);\r\n        if(count > Object.entries(questions).length){\r\n            continue\r\n        } else {\r\n            answers[value.axis].push(\r\n                <tr key={key} className='m-2 p-2'>\r\n                    <td key={`${key}_id`} className='p-2 w-4'>{count}.</td>\r\n                    <td key={`${key}_score`} \r\n                        className={`p-2 w-8 rounded-l-full  ${value.score<3 ? 'bg-yellow-200' : ''}`}>\r\n                        <img src={scoreIcons[value.score]} className='w-8 h-8'/>\r\n                    </td>\r\n                    <td key={`${key}_text`} \r\n                        className={`p-2 text-gray-800 rounded-r-full ${value.score<3 ? 'bg-yellow-200' : ''}`}\r\n                        style={{whiteSpace: 'normal'}}\r\n                    >\r\n                            {value.text}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        count += 1;\r\n    } \r\n    return(\r\n        <div key={'t_responses'} className='m-2 p-2 text-left'>\r\n            <div className='mb-2 w-full flex justify-center items-center'>\r\n                <div className='p-2 pt-0 m-2 mt-0 rounded'>\r\n                    <p className='p-2 pt-0 flex flex-row justify-center items-end text-spring-400'>\r\n                        <strong className='p-1'>Languishing</strong>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>1<img src={s1} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>2<img src={s2} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>3<img src={s3} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>4<img src={s4} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>5<img src={s5} className='h-4'/></p>\r\n                        <strong className='p-1'>Flourishing</strong>\r\n                    </p>\r\n                    <p className='p-2 bg-yellow-200 flex flex-row justify-start items-center rounded-full'>\r\n                        <div><img src={s1} className='h-4 m-1 inline'/><img src={s2} className='h-4 m-1 inline'/></div>\r\n                        <p className='p-2'>We have highlighted any areas for growth where you scored below 3</p>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            \r\n            <h1 id='PhysicalQs' className='p-2 text-lg text-white rounded' style={{background: labels.PhysicalHealth.color}}>\r\n                Physical Health (diet, sleep, routine, rest, exercise)\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.PhysicalHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.PhysicalHealth}</tbody></table>\r\n            \r\n            <h1 id='CognitiveQs' className='p-2 text-lg text-white rounded' style={{background: labels.CognitiveHealth.color}}>\r\n                Cognitive Health (thinking approach, concentration, switching off)\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.CognitiveHealth.toFixed(1)}\r\n                </span>    \r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.CognitiveHealth}</tbody></table>\r\n\r\n            <h1 id='EmotionalQs' className='p-2 text-lg text-white rounded' style={{background: labels.EmotionalHealth.color}}>\r\n                Emotional Health (feelings, regulation, expression)\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.EmotionalHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.EmotionalHealth}</tbody></table>\r\n            \r\n            <h1 id='SocialQs' className='p-2 text-lg text-white rounded' style={{background: labels.SocialHealth.color}}>\r\n                Social Health (relationships, confidence, managing conflicts)\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.SocialHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.SocialHealth}</tbody></table>\r\n\r\n            <h1 id='SpiritualQs' className='p-2 text-lg text-white rounded' style={{background: labels.SpiritualHealth.color}}>\r\n                Spiritual Health (purpose, values, goals)\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.SpiritualHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.SpiritualHealth}</tbody></table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Results(props:{\r\n    scores: results;\r\n    responses: questionnaire;\r\n    progress: number;\r\n    code: string;\r\n    onClick: {\r\n        viewMeasure: Function;\r\n        loadResults: Function;\r\n    }\r\n}):JSX.Element {\r\n    const [showResponses, setShowResponses] = useState<boolean>(false);\r\n    const [newCode, setNewCode] = useState<string>('');\r\n\r\n    // Show results\r\n    if(props.progress<=1){ // If measure not finished\r\n        return(\r\n            <div className='h-3/4 flex flex-col justify-center items-center'>\r\n                <div className='m-2 p-8 rounded bg-spring-400 text-white shadow-xl'>\r\n                    <h1 className='p-2 text-3xl'>\r\n                        Your results will be shown here!\r\n                    </h1>\r\n                    <ThemeButton value='Take the quiz now' onClick={()=>{props.onClick.viewMeasure()}} />\r\n                    <h1 className='text-2xl font-medium'>OR</h1>\r\n                    <p>Enter a code to load previous results:</p>\r\n                    <input id='codeInput' className='m-2 p-2 text-black rounded border' type=\"text\" name=\"code\"\r\n                        value = {newCode}\r\n                        onChange={(e) => {setNewCode(e.target.value)}}\r\n                    />\r\n                    <button className='m-2 p-3 rounded bg-spring-200 text-black hover:bg-spring-300 hover:text-white' \r\n                        onClick={()=>{props.onClick.loadResults(newCode)}}>\r\n                        <h1>Load code</h1>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else { // If measure finished\r\n        return(\r\n            <div className='w-full h-full relative bg-white flex flex-col items-center'>   \r\n\r\n                <div className='m-2 mt-4 p-2 lg:p-8 lg:pt-2 bg-spring-100 flex flex-col justify-center items-center relative rounded-xl'>\r\n                    <h1 id='Graph' className='p-4 text-3xl text-spring-400'>Your results</h1>\r\n                    <p className='p-2 flex flex-row justify-center items-end text-spring-400'>\r\n                        <strong className='p-1'>Languishing</strong>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>1<img src={s1} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>2<img src={s2} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>3<img src={s3} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>4<img src={s4} className='h-4'/></p>\r\n                        <p className='p-1 flex flex-col justify-center items-center'>5<img src={s5} className='h-4'/></p>\r\n                        <strong className='p-1'>Flourishing</strong>\r\n                    </p>\r\n                    <div className='absolute top-48 lg:top-1/2 animate__animated animate__fadeOut animate__delay-2s'>\r\n                        <img className='h-12 inline' src={flowerGIF} />\r\n                        <p>Drawing...</p>\r\n                    </div>\r\n                    <div className='animate__animated animate__bounceIn animate__delay-2s'>\r\n                        <Graph scores={props.scores} />\r\n                    </div>\r\n                    <div id='SaveCode' className='m-2 mb-0 w-full text-xs text-spring-300 flex flex-row justify-center align-center'>\r\n                        <p className='p-2 pb-0'> Direct code to reproduce results: </p>\r\n                        <input value={props.code} type='text' size={37} readOnly className='p-2 bg-spring-100 rounded transition-all'/>\r\n                    </div>\r\n                </div>  \r\n                \r\n                <div id='Answers' className='m-2 p-4 bg-spring-100 rounded-xl'>\r\n                    <div className='p-2 flex flex-row justify-between items-center'>\r\n                        <h1 className='px-2 text-2xl text-spring-400'>Your answers</h1>\r\n                        <ToggleAnswersButton onClick={()=>{setShowResponses(!showResponses)}}/>\r\n                    </div>\r\n                    {showResponses ? <Answers responses={props.responses} scores={props.scores} /> : ''}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport './App.css';\r\n// Types\r\nimport {question, questionnaire, results} from './model/types';\r\n// Assets\r\nimport {questions} from './assets/questionnaire';\r\nimport logo from './assets/gfx/logo-flourish.svg';\r\n// Views\r\nimport {TV, Splash} from './templates/splash';\r\nimport {Welcome} from './templates/welcome';\r\nimport {Instructions} from './templates/instructions';\r\nimport {Questionnaire} from './templates/questionnaire';\r\nimport {Results} from './templates/results';\r\n\r\nconst App: React.FC = () => {\r\n  const [view, setView] = useState<'splash' | 'welcome' | 'instructions' | 'questionnaire' | 'results' >('splash');\r\n  const [recordedAnswers, recordAnswers] = useState<questionnaire>(questions);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [code, setCode] = useState<string>('');\r\n\r\n  const remainingQuestions = (): question[] => {\r\n    // Get array of unanswered questions\r\n    var unansweredQuestions: question[] = [];\r\n    for(const [key, value] of Object.entries(recordedAnswers)){\r\n      if(value.score===0){\r\n        unansweredQuestions.push(value);\r\n      }\r\n    }\r\n    return(unansweredQuestions);\r\n  }\r\n\r\n  const sample = (unansweredQuestions: question[]): question[] => {\r\n    // Set measure in progress\r\n    if(progress === 0){setProgress(1)};\r\n    \r\n    // Shuffle array and return upto 5 random objects\r\n    const shuffled = unansweredQuestions.sort(() => 0.5 - Math.random());\r\n    const n = Math.min(unansweredQuestions.length, 5);\r\n    return(shuffled.slice(0, n));\r\n  }\r\n\r\n  // Manage action on form continue button (continue or finish questionnaire)\r\n  const formContinueAction = (answers: question[]) => {\r\n\r\n    // Save answers\r\n    var newAnswer: questionnaire = JSON.parse(JSON.stringify(recordedAnswers)); // Clone existing results\r\n    for(const a of answers){ // Answer each question the user answered\r\n      newAnswer[a.id] = a; \r\n    };\r\n    recordAnswers(newAnswer); // Save answers\r\n\r\n    // Update progress\r\n    setProgress( (Object.entries(questions).length - remainingQuestions().length) / Object.entries(questions).length * 100 );\r\n\r\n    // Continue to results once finished\r\n    if(remainingQuestions().length === 0){\r\n      const generatedCode = encodeResponses();\r\n      setCode(generatedCode);\r\n      setView('results');\r\n    };\r\n  }\r\n\r\n  // Calculate score\r\n  function scoreResponses(): results{\r\n    const calcAve = (thisAxis:question[\"axis\"]) => {\r\n      let n=0;\r\n      let score=0;\r\n      for(const [key, value] of Object.entries(recordedAnswers)){\r\n        if(value.axis === thisAxis){\r\n          n+=1;\r\n          score+=value.score;\r\n        }\r\n      }\r\n      return score/n;\r\n    }\r\n    return({\r\n      PhysicalHealth: calcAve('PhysicalHealth'),\r\n      CognitiveHealth: calcAve('CognitiveHealth'),\r\n      EmotionalHealth: calcAve('EmotionalHealth'),\r\n      SocialHealth: calcAve('SocialHealth'),\r\n      SpiritualHealth: calcAve('SpiritualHealth')\r\n   });\r\n  }\r\n\r\n  // Encode scores\r\n  const leadingLetter = 'W';\r\n  const encodeResponses = ():string => { \r\n    var codeString = leadingLetter;\r\n    var copyOfAnswers:questionnaire = JSON.parse(JSON.stringify(recordedAnswers));\r\n    for(const [key, value] of Object.entries(copyOfAnswers)){\r\n      if(key !== 'undefined'){\r\n        codeString += value.score.toString();\r\n      } else {continue};\r\n    };\r\n    return codeString;\r\n  };\r\n  const codeLikelyValid = (codeString:string) => {\r\n    // Example valid code: W12345123452134521345234531234521345\r\n    const lengthOfQuestionnaire = Object.entries(questions).length;\r\n    if(codeString.length!==(lengthOfQuestionnaire+1)){\r\n      alert(`Your code \"${codeString}\" was not ${lengthOfQuestionnaire} digits long. Valid codes are ${lengthOfQuestionnaire} digits long and are a series of numbers (0-5) starting with the character ${leadingLetter}. Please try again and contact support if the problem persists`)\r\n      return(false);\r\n    }\r\n    if(codeString[0]!==leadingLetter){\r\n      alert(`Your code \"${codeString}\" did not start with ${leadingLetter}. Valid codes are 35 digits long and are a series of numbers (0-5) starting with the character ${leadingLetter}. Please try again and contact support if the problem persists`)\r\n      return(false);\r\n    }\r\n    return(true)\r\n  }\r\n  const getResponsesFromCode = (codeString:string):questionnaire => {\r\n    var copyOfAnswers:questionnaire = JSON.parse(JSON.stringify(recordedAnswers));\r\n    for(let i = 1; i < codeString.length; i++){  // Skip leading character W\r\n      copyOfAnswers[`q${i}`].score = Number(codeString[i]);\r\n    }\r\n    return(copyOfAnswers);\r\n  }\r\n\r\n  const loadResponses = (codeString:string) => {\r\n    setCode(codeString);\r\n    if(codeLikelyValid(codeString)){\r\n      const newResponses = getResponsesFromCode(codeString);\r\n      recordAnswers(newResponses);\r\n      setProgress(100);\r\n      console.log('Restored responses from code:', codeString, 'to current results', recordedAnswers);\r\n    }\r\n  }\r\n\r\n  // Select view\r\n  const content = (): JSX.Element => {\r\n    switch(view){\r\n      case 'splash': return(\r\n        <Splash onClick={{start: ()=>{ setView('welcome') }}}/>\r\n      );\r\n      case 'welcome': return(\r\n        <Welcome onClick={{\r\n          start: ()=>{ setView('instructions') },\r\n          demo: ()=>{loadResponses('W13524243514253415241314241512411111'); setView('questionnaire')}\r\n        }}/>\r\n      );\r\n      case 'instructions': return(\r\n        <Instructions onClick={{start: ()=>{ setView('questionnaire') }}}/>\r\n      )\r\n      case 'questionnaire': return(\r\n        <Questionnaire \r\n          progress={progress}\r\n          questions={sample( remainingQuestions() )}\r\n          onClick={{\r\n            continue: (answers:question[]) => {formContinueAction(answers)},\r\n            back: ()=>{setView('results')}\r\n          }}\r\n        />\r\n      );\r\n      case 'results': return(\r\n        <Results \r\n          scores={scoreResponses()}\r\n          responses={recordedAnswers}\r\n          code={code}\r\n          progress={progress}\r\n          onClick={{\r\n            viewMeasure: ()=>{setView('questionnaire')},\r\n            loadResults: (newCode:string)=>{loadResponses(newCode)},\r\n          }}\r\n        />\r\n      );\r\n      default: return(<div>Error: Contact support</div>);\r\n    }\r\n  }\r\n\r\n  // Show view\r\n  const isViewActive = (o:string) => {\r\n    if(view===o){\r\n      return(` text-spring-400`);\r\n    } else {\r\n      return(` text-white hover:text-spring-400 `);\r\n    }\r\n  }\r\n  const header = ():JSX.Element => {\r\n    return(\r\n      <div>\r\n        <nav className='p-2 bg-spring-300 flex flex-col text-white rounded-t-xl'>\r\n          <img src={logo} className='m-2 h-12'/>\r\n          <div id='Links' className='p-2 text-sm flex flex-row justify-center items-center '>\r\n            <button className={`px-2 ${isViewActive('splash')}`} onClick={()=>{setView('splash')}}>Splash</button>\r\n            <button className={`px-2 ${isViewActive('welcome')} border-l border-spring-200`} onClick={()=>{setView('welcome')}}>Home</button>\r\n            <button className={`px-2 ${isViewActive('instructions')} border-l border-spring-200`} onClick={()=>{setView('instructions')}}>About</button>\r\n            <button className={`px-2 ${isViewActive('questionnaire')} border-l border-spring-200`} onClick={()=>{setView('questionnaire')}}>Quiz</button>\r\n            <button className={`px-2 ${isViewActive('results')} border-l border-spring-200`} onClick={()=>{setView('results')}}>Results</button>\r\n            <button className={`px-2 ${isViewActive('results')} border-l border-spring-200`} onClick={()=>{loadResponses('W13524243514253415241314241512411111'); setView('results')}}>Demo</button>\r\n          </div>\r\n        </nav>\r\n\r\n        <div id='Progress'\r\n          className='mb-4 p-2 bg-spring-200 flex flex-row justify-center items-center' \r\n          style={{display: progress>0&&progress<100 ? 'flex' : 'none'}}\r\n        >\r\n          <h1>Quiz progress:</h1>\r\n          <div className=\"m-2 h-4 w-3/4 max-w-xl rounded-xl shadow bg-gray-200\">\r\n              <div \r\n                  className=\"h-full rounded-xl bg-wavy transition-all duration-1000\" \r\n                  style={{width:`${progress}%`}}\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div id='Menu' className=\"App h-full\">\r\n      <TV showTV={view==='splash'} children={\r\n        <div className='h-full w-full'>\r\n          {view==='splash' ? '' : header()}\r\n          {content()}\r\n        </div>\r\n      } onClick={{onTurnDial: ()=>{setView('welcome')}}}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}