{"version":3,"sources":["assets/questionnaire.tsx","assets/gfx/logo-fe.svg","assets/gfx/bg.svg","assets/gfx/logo-petal.svg","templates/splash.tsx","assets/gfx/petal-flower.gif","assets/gfx/petal-snapshot.gif","assets/gfx/petal_axes.svg","templates/questionnaire.tsx","assets/gfx/petal_EmotionalHealth.svg","assets/gfx/petal_PhysicalHealth.svg","assets/gfx/petal_SocialHealth.svg","assets/labels.tsx","assets/gfx/petal_SpiritualHealth.svg","assets/gfx/petal_CognitiveHealth.svg","assets/gfx/flourishing_bulb_petal.svg","assets/gfx/flourishing_outline_petal.svg","assets/gfx/flourishing_red_petal.svg","assets/gfx/flourishing_yellow_petal.svg","assets/gfx/flourishing_orange_petal.svg","assets/gfx/flourishing_cyan_petal.svg","assets/gfx/flourishing_navy_petal.svg","assets/gfx/petal_s1.svg","assets/gfx/petal_s2.svg","assets/gfx/petal_s3.svg","assets/gfx/petal_s4.svg","assets/gfx/petal_s5.svg","templates/results.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["questions","q1","id","text","axis","score","q2","q3","q4","q5","q6","q7","q8","q9","q10","q11","q12","q13","q14","q15","q16","q17","q18","q19","q20","q21","q22","q23","q24","q25","q26","q27","q28","q29","q30","q31","q32","q33","q34","q35","Splash","props","className","style","background","bg","backgroundRepeat","backgroundPosition","backgroundSize","href","target","rel","onClick","start","src","petalLogo","display","Question","question","type","name","updateAnswer","Questionnaire","answersThisPage","q","showInstructions","snapshotGIF","wellbeingAxesImage","flowerGIF","dismissInstructions","progress","renderedQuestions","push","renderQuestions","Object","entries","alert","continue","length","back","labels","PhysicalHealth","title","subtitle","color","icon","SpiritualHealth","SocialHealth","EmotionalHealth","CognitiveHealth","ToggleAnswersButton","useState","pressed","setPressed","Label","pos","y","x","label","top","left","toFixed","borderColor","Graph","w","a","Math","PI","centerBulb","scalePetal","scaledArea","scaledRadius","sqrt","r","d","pointOnCirc","o","c","cos","rad","sin","place","angle","petal","offset","coords","width","transform","write","textShadow","graph","height","bulb","petalOutline","petalForPH","scores","petalForEH","petalForCH","petalForSpH","petalForSoH","Answers","answers","count","scoreIcons","s1","s2","s3","s4","s5","responses","key","value","console","log","whiteSpace","Results","showResponses","newCode","setNewCode","viewMeasure","onChange","e","loadResults","generateCode","code","App","view","setView","recordedAnswers","recordAnswers","setProgress","setCode","setShowInstructions","remainingQuestions","unansweredQuestions","sample","shuffled","sort","random","n","min","slice","scoreResponses","calcAve","thisAxis","leadingLetter","loadResponses","codeString","lengthOfQuestionnaire","codeLikelyValid","newResponses","copyOfAnswers","JSON","parse","stringify","i","Number","getResponsesFromCode","logo","newAnswer","formContinueAction","toString","encodeResponses","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38acc3c4.chunk.js","sourcesContent":["import {question} from '../model/types';\r\n\r\nexport const questions: Record<string, question> = {\r\n    q1:{id:'q1', text:`I have a high level of physical energy`, axis:'PhysicalHealth', score:0},\r\n    q2:{id:'q2', text:`When I wake up, I feel rested and ready for a new day`, axis:'PhysicalHealth', score:0},\r\n    q3:{id:'q3', text:`I like exercising and do so regularly every week`, axis:'PhysicalHealth', score:0},\r\n    q4:{id:'q4', text:`My eating and drinking habits are healthy`, axis:'PhysicalHealth', score:0},\r\n    q5:{id:'q5', text:`My routines for exercising are well set up`, axis:'PhysicalHealth', score:0},\r\n    q6:{id:'q6', text:`I have regular ‘rests’ where I take time to relax and do my favourite thing(s)`, axis:'PhysicalHealth', score:0},\r\n    q7:{id:'q7', text:`I sleep at least seven hours most days`, axis:'PhysicalHealth', score:0},\r\n    q8:{id:'q8', text:`I feel fit and healthy`, axis:'PhysicalHealth', score:0},\r\n    q9:{id:'q9', text:`I have activities that help me recharge my batteries`, axis:'PhysicalHealth', score:0},\r\n    q10:{id:'q10', text:`I find it easy to concentrate and focus on my work`, axis:'CognitiveHealth', score:0},\r\n    q11:{id:'q11', text:`I manage my time effectively and well`, axis:'CognitiveHealth', score:0},\r\n    q12:{id:'q12', text:`I have a positive outlook on life`, axis:'CognitiveHealth', score:0},\r\n    q13:{id:'q13', text:`I try to find solutions to problems and issues`, axis:'CognitiveHealth', score:0},\r\n    q14:{id:'q14', text:`I can easily switch off when I take a break or in the evening`, axis:'CognitiveHealth', score:0},\r\n    q15:{id:'q15', text:`I don’t overthink or overanalyze things`, axis:'CognitiveHealth', score:0},\r\n    q16:{id:'q16', text:`I can recognize and name many of the emotions I experience (positive and negative)`, axis:'EmotionalHealth', score:0},\r\n    q17:{id:'q17', text:`I am happy with all my emotions (negative and positive) and welcome them`, axis:'EmotionalHealth', score:0},\r\n    q18:{id:'q18', text:`I can regulate my emotions and can express them in a healthy way`, axis:'EmotionalHealth', score:0},\r\n    q19:{id:'q19', text:`I feel connected to others and know who to reach out to when I am feeling sad or upset`, axis:'EmotionalHealth', score:0},\r\n    q20:{id:'q20', text:`I create good relationships with others`, axis:'SocialHealth', score:0},\r\n    q21:{id:'q21', text:`I get along with my friends`, axis:'SocialHealth', score:0},\r\n    q22:{id:'q22', text:`I get along with my family`, axis:'SocialHealth', score:0},\r\n    q23:{id:'q23', text:`I feel confident`, axis:'SocialHealth', score:0},\r\n    q24:{id:'q24', text:`I enjoy speaking in public`, axis:'SocialHealth', score:0},\r\n    q25:{id:'q25', text:`I have good friends with whom I can share my issues easily`, axis:'SocialHealth', score:0},\r\n    q26:{id:'q26', text:`I can manage conflict and focus on getting everyone’s needs met`, axis:'SocialHealth', score:0},\r\n    q27:{id:'q27', text:`I have a passion/hobby I engage with on a regular basis`, axis:'SpiritualHealth', score:0},\r\n    q28:{id:'q28', text:`I know what I want to achieve in life`, axis:'SpiritualHealth', score:0},\r\n    q29:{id:'q29', text:`I have a sense of purpose in life`, axis:'SpiritualHealth', score:0},\r\n    q30:{id:'q30', text:`I know what my personal values are in life`, axis:'SpiritualHealth', score:0},\r\n    q31:{id:'q31', text:`I set goals which are aligned with my personal values`, axis:'SpiritualHealth', score:0},\r\n    q32:{id:'q32', text:`I have a fulfilling life`, axis:'SpiritualHealth', score:0},\r\n    q33:{id:'q33', text:`I enjoy reconnecting to nature on a regular basis`, axis:'SpiritualHealth', score:0},\r\n    q34:{id:'q34', text:`I believe I am learning and growing every day`, axis:'SpiritualHealth', score:0},\r\n    q35:{id:'q35', text:`I believe I am a compassionate human being`, axis:'SpiritualHealth', score:0},\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-fe.680c79f8.svg\";","export default __webpack_public_path__ + \"static/media/bg.0154e95c.svg\";","export default __webpack_public_path__ + \"static/media/logo-petal.8a41023e.svg\";","import bg from '../assets/gfx/bg.svg';\r\nimport petalLogo from '../assets/gfx/logo-petal.svg'\r\n\r\nexport function Splash(props:{\r\n    onClick: {\r\n        start: Function;\r\n    }\r\n}):JSX.Element {\r\n    return(\r\n        <div className='w-full h-3/4 flex flex-col justify-center items-center' style={{\r\n            background: `url(${bg})`, \r\n            backgroundRepeat: 'no-repeat', \r\n            backgroundPosition: 'fixed', \r\n            backgroundSize: '100% auto'\r\n        }}>\r\n            <div className='m-2 p-8 rounded bg-white shadow-xl'>\r\n                <h1 className='p-2 text-3xl text-gray-500'>\r\n                    Flourishing Online\r\n                </h1>\r\n                <h1 className='p-2 text-3xl'>\r\n                    Assessment tool for wellbeing\r\n                </h1>\r\n                <p className='p-2 text-lg'>\r\n                    Empower students to flourish and be well\r\n                </p>\r\n                <a className='m-2 p-3 rounded-xl bg-gray-600 text-white' href='https://flourishingeducation.co.uk' target='_blank' rel='noreferrer'>\r\n                    Learn more\r\n                </a>          \r\n                <button className='m-4 p-3 rounded-xl bg-green-600 text-white' onClick={()=>{props.onClick.start()}}>\r\n                    <img src={petalLogo} className='mr-2 w-8 h-auto' style={{display: 'inline'}}/>\r\n                    Begin here\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/petal-flower.2bc17ffe.gif\";","export default __webpack_public_path__ + \"static/media/petal-snapshot.c2e4e564.gif\";","export default __webpack_public_path__ + \"static/media/petal_axes.e1cc53fa.svg\";","import {question} from '../model/types';\r\nimport {Instructions} from '../assets/copy';\r\n// Assets\r\nimport flowerGIF from '../assets/gfx/petal-flower.gif';\r\nimport snapshotGIF from '../assets/gfx/petal-snapshot.gif';\r\nimport wellbeingAxesImage from '../assets/gfx/petal_axes.svg';\r\n\r\nfunction Question(props:{\r\n    question: question;\r\n    onClick: {\r\n        updateAnswer: Function;\r\n    }\r\n}):JSX.Element{\r\n    return(\r\n        <div className='p-2 m-2 d-flex flex-col'>\r\n            <p>{props.question.text}</p>\r\n            <div className='p-1 d-flex flex-row text-xs'>\r\n                Strongly disagree\r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_1`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 1)}}/>\r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_2`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 2)}}/> \r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_3`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 3)}}/> \r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_4`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 4)}}/> \r\n                <input className='m-1' type=\"radio\" key={`${props.question.id}_5`} name={props.question.id} onClick={()=>{props.onClick.updateAnswer(props.question.id, 5)}}/> \r\n                Strongly agree\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Questionnaire(props:{\r\n    questions: question[]; // Five questions\r\n    progress: number;\r\n    showInstructions: boolean;\r\n    onClick: {\r\n        dismissInstructions: Function;\r\n        continue: Function;\r\n        back: Function;\r\n    }\r\n}):JSX.Element{\r\n    // Set answers\r\n    let answersThisPage: Record<string, question> = {};\r\n    for(const q of props.questions){\r\n        answersThisPage[q.id] = q;\r\n    };\r\n\r\n    // Validate answers\r\n    const validateFormAndContinue = () => {\r\n        for(const [key, value] of Object.entries(answersThisPage)){\r\n            if(value.score===0){\r\n                alert('Please answer all questions before continuing!');\r\n                return;\r\n            }\r\n        };\r\n        props.onClick.continue(Object.entries(answersThisPage));\r\n    }\r\n\r\n    // Render questions on page\r\n    const renderQuestions = (): JSX.Element => {\r\n        const renderedQuestions: JSX.Element[] = [];\r\n        for(const q of props.questions){\r\n            renderedQuestions.push(\r\n                <Question \r\n                    question={q}\r\n                    key={q.id}\r\n                    onClick={{\r\n                        updateAnswer: (id:string, score:number) => {answersThisPage[id].score = score}\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        return(\r\n            <div className='flex flex-col items-center'> \r\n                {renderedQuestions}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    if(props.showInstructions){\r\n        return(\r\n            <div className='p-2 m-2 flex flex-col items-center justify-center'>\r\n                <img src={snapshotGIF}/>\r\n                <h1 className='p-2 max-w-md text-xl text-center'>This measure will give you a snapshot of your wellbeing at this moment in time.</h1>\r\n                <p className='p-2 max-w-md text-left'>You will be able to identify areas for growth in your physical, social, emotional, cognitive and spiritual wellbeing</p>\r\n                <img src={wellbeingAxesImage} className='p-2 max-w-md'/>\r\n                <div className='m-2 p-2 flex flex-row items-center'>\r\n                    <img src={flowerGIF}/>\r\n                    <h1 className='max-w-sm text-left'>Be honest with yourself, the aim is not to make you feel bad or guilty, but to better understand yourself and see where you can introduce healthy habits in your life!</h1>\r\n                </div>\r\n                <button className='m-2 p-3 rounded-xl bg-green-600 text-white' onClick={()=>{props.onClick.dismissInstructions()}}>\r\n                    <h1>Start</h1>\r\n                </button>\r\n            </div>\r\n        )\r\n    } else if(props.progress<100){\r\n        return(\r\n            <div>\r\n                {renderQuestions()}\r\n                <button className='m-2 p-3 rounded-xl bg-gray-800 text-white' onClick={validateFormAndContinue}>\r\n                    <h1>{props.questions.length < 5 ? 'Finish' : 'Continue'}</h1>\r\n                </button>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className='flex flex-ow justify-center items-center'>\r\n                <div className='p-4 m-2 max-w-lg rounded bg-white'>\r\n                    <h1 className='m-2 text-2xl'>\r\n                        All done! \r\n                    </h1>\r\n                    <h1 className='m-2 text-lg'>\r\n                        Click below to continue to see your results or refresh the web page to start again.\r\n                    </h1>\r\n                    <button className='m-2 p-3 rounded-xl bg-gray-800 text-white' \r\n                        onClick={()=>{props.onClick.back()}}>\r\n                        <h1>View results</h1>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/petal_EmotionalHealth.bf985abb.svg\";","export default __webpack_public_path__ + \"static/media/petal_PhysicalHealth.a946e99a.svg\";","export default __webpack_public_path__ + \"static/media/petal_SocialHealth.4b92185f.svg\";","import EmotionalHealth from '../assets/gfx/petal_EmotionalHealth.svg';\r\nimport PhysicalHealth from '../assets/gfx/petal_PhysicalHealth.svg';\r\nimport SocialHealth from '../assets/gfx/petal_SocialHealth.svg';\r\nimport SpiritualHealth from '../assets/gfx/petal_SpiritualHealth.svg';\r\nimport CognitiveHealth from '../assets/gfx/petal_CognitiveHealth.svg';\r\n\r\nexport interface graphLabel {\r\n    title: string;\r\n    subtitle: string;\r\n    color: string;\r\n    icon: string;\r\n}\r\n\r\nexport const labels:Record<'PhysicalHealth' | 'SpiritualHealth' | 'SocialHealth' | 'EmotionalHealth' | 'CognitiveHealth', graphLabel> = {\r\n    PhysicalHealth: {\r\n        title: 'Physical Health',\r\n        subtitle: 'How well you take care of your body',\r\n        color: '#EA5455',\r\n        icon: PhysicalHealth\r\n    },\r\n    SpiritualHealth:{\r\n        title: 'Spiritual Health',\r\n        subtitle: 'A connection to the wider and personal meanings behind your actions',\r\n        color: '#2D4059',\r\n        icon: SpiritualHealth\r\n    },\r\n    SocialHealth:{\r\n        title: 'Social Health',\r\n        subtitle: 'Quality social relationships and support networks',\r\n        color: '#FFB400',\r\n        icon: SocialHealth\r\n    },\r\n    EmotionalHealth:{\r\n        title: 'Emotional Health',\r\n        subtitle: 'Your understanding of your emotions',\r\n        color: '#F07B3F',\r\n        icon: EmotionalHealth\r\n    },\r\n    CognitiveHealth:{\r\n        title: 'Cognitive Health',\r\n        subtitle: 'The pattern of your internal thoughts and “mental chatter”',\r\n        color: '#00B8A9',\r\n        icon: CognitiveHealth\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/petal_SpiritualHealth.59181db5.svg\";","export default __webpack_public_path__ + \"static/media/petal_CognitiveHealth.d288a96c.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_bulb_petal.66e30c15.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_outline_petal.4b27e876.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_red_petal.6cc564b5.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_yellow_petal.3e9fb60d.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_orange_petal.11302a82.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_cyan_petal.0dea1b24.svg\";","export default __webpack_public_path__ + \"static/media/flourishing_navy_petal.8dcb58be.svg\";","export default __webpack_public_path__ + \"static/media/petal_s1.c852f521.svg\";","export default __webpack_public_path__ + \"static/media/petal_s2.402c6238.svg\";","export default __webpack_public_path__ + \"static/media/petal_s3.5de2361e.svg\";","export default __webpack_public_path__ + \"static/media/petal_s4.df10534b.svg\";","export default __webpack_public_path__ + \"static/media/petal_s5.0cccec0e.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport {question, questionnaire, results} from '../model/types';\r\nimport {questions} from '../assets/questionnaire';\r\n// Import assets\r\nimport {labels, graphLabel} from '../assets/labels';\r\nimport petalLogo from '../assets/gfx/logo-petal.svg'\r\nimport bulb from '../assets/gfx/flourishing_bulb_petal.svg';\r\nimport petalOutline from '../assets/gfx/flourishing_outline_petal.svg';\r\nimport petalForPH from '../assets/gfx/flourishing_red_petal.svg';\r\nimport petalForSoH from '../assets/gfx/flourishing_yellow_petal.svg';\r\nimport petalForEH from '../assets/gfx/flourishing_orange_petal.svg';\r\nimport petalForCH from '../assets/gfx/flourishing_cyan_petal.svg';\r\nimport petalForSpH from '../assets/gfx/flourishing_navy_petal.svg';\r\nimport s1 from '../assets/gfx/petal_s1.svg';\r\nimport s2 from '../assets/gfx/petal_s2.svg';\r\nimport s3 from '../assets/gfx/petal_s3.svg';\r\nimport s4 from '../assets/gfx/petal_s4.svg';\r\nimport s5 from '../assets/gfx/petal_s5.svg';\r\n\r\nfunction ToggleAnswersButton(props:{\r\n    onClick: Function;\r\n}):JSX.Element{\r\n    const [pressed, setPressed] = useState<boolean>(false);\r\n    return(\r\n        <button \r\n            className={`\r\n                m-2 p-3 rounded-xl bg-gray-800 text-white justify-self-end transition-all duration-500\r\n                ${pressed ? \"bg-red-600\" : \"bg-gray-800\"}\r\n            ` }\r\n            onClick={()=>{\r\n                props.onClick();\r\n                setPressed(!pressed);\r\n            }}>\r\n            <h1>{pressed ? 'Hide' : 'Show'}</h1>\r\n        </button>\r\n    )\r\n}\r\n\r\nfunction Label(props:{\r\n    label: graphLabel;\r\n    pos:{\r\n        x:number;\r\n        y:number;\r\n    };\r\n    score: number;\r\n}):JSX.Element{\r\n    return(\r\n        <div className={`p-2 xl:py-${props.pos.y*4} xl:pr-${props.pos.x*4} w-52 max-w-52 text-xs relative flex flex-col justify-center items-center`}>\r\n            <div className='flex flex-col items-center'>\r\n                <p className='p-1 rounded-full relative border border-white shadow' style={{color:'white', background: props.label.color, top:'1rem', left:'1rem'}}>\r\n                    {props.score.toFixed(1)}\r\n                </p>\r\n                <img src={props.label.icon} className='h-8 w-auto'/>\r\n            </div>\r\n            <h1 className='font-medium' style={{display: 'inline'}}>\r\n                {props.label.title}\r\n            </h1>\r\n            <hr style={{borderColor: props.label.color}}/>\r\n            <p className='font-light'>\r\n                {props.label.subtitle}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Compile graph of results\r\nfunction Graph(props:{\r\n    scores: results;\r\n}){\r\n    // Base widths (w) and areas (a)\r\n    const w = {container: 14, bulb: 6, petal: 2.5};\r\n    const a = {bulb: Math.PI * w.bulb ^ 2, petal: Math.PI * w.petal ^ 2};\r\n    const scaleFactor = 1; // How much to scale petal areas by (e.g., scaleFactor * score * a.petal = area)\r\n    // Geometric calculations\r\n    const centerBulb  = ():number => { // Find center of canvas\r\n        return (w.container / 2) - (w.bulb / 2); \r\n    };\r\n    const scalePetal = (score: number):{r:number, d:number, a:number} => {\r\n        const scaledArea = a.petal * scaleFactor * score;\r\n        const scaledRadius = Math.sqrt( scaledArea / Math.PI );\r\n        return ({\r\n            r: scaledRadius,\r\n            d: scaledRadius * 2,\r\n            a: scaledArea\r\n        })\r\n    }\r\n    const pointOnCirc = (o:{c: number, r: number, rad:number}) => {\r\n        return({\r\n            x: o.c + o.r * Math.cos(o.rad), // Adjust centre\r\n            y: o.c + o.r * Math.sin(o.rad)\r\n        })\r\n    }\r\n    // Draw graph elements\r\n    const place = (score:number, angle:number):{width: string, top: string, left: string, transform: string} => {\r\n        const petal = scalePetal(score);\r\n        const offset:{x:number, y:number} = {x: 0, y: 0};\r\n        var coords = pointOnCirc({c:w.container/2,  r: (w.bulb/2) + (petal.r*.5), rad:angle*Math.PI/180});\r\n            coords.x += offset.x;\r\n            coords.y += offset.y;\r\n        return({ // Position on canvas\r\n            width: `${petal.d}rem`,\r\n            left: `${coords.x}rem`,\r\n            top: `${coords.y}rem`,\r\n            transform: `translate(-50%, -50%) rotate(${angle-270}deg)`\r\n        })\r\n    }\r\n    const write = (score:number, angle:number):{top: string, left: string, transform: string, color: string, background: string, textShadow: string} => {\r\n        const petal = scalePetal(score);\r\n        const offset:{x:number, y:number} = {x: 0, y: 0};\r\n        var coords = pointOnCirc({c:w.container/2,  r: (w.bulb/2) + (petal.r*.5), rad:angle*Math.PI/180});\r\n            coords.x += offset.x;\r\n            coords.y += offset.y;\r\n        return({ // Position on canvas\r\n            left: `${coords.x}rem`,\r\n            top: `${coords.y}rem`,\r\n            transform: `translate(-50%, -50%)`,\r\n            color: 'white',\r\n            background: 'none',\r\n            textShadow: '0px 0px 3px black'\r\n        })\r\n    }\r\n    const graph = ():JSX.Element => { return (\r\n        <div id='graph' className={`mx-8 w-56 relative`} style={{height:'14rem'}}>\r\n            {\r\n                // Central bulb\r\n            }\r\n            <img src={bulb} className='absolute h-auto z-10' style={{width: `${w.bulb}rem`, top:`${centerBulb()}rem`, left:`${centerBulb()}rem`}}/>\r\n            {\r\n                // Petal outlines\r\n            }\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 270)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 342)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 54)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 126)}/>\r\n            <img src={petalOutline} className='absolute h-auto' style={place(5, 198)}/>\r\n            {\r\n                // Petals showing score\r\n            }\r\n            <img src={petalForPH} className='absolute h-auto' style={place(props.scores.PhysicalHealth, 270)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.PhysicalHealth, 270)}>{props.scores.PhysicalHealth.toFixed(1)}</h1>\r\n            <img src={petalForEH} className='absolute h-auto' style={place(props.scores.EmotionalHealth, 342)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.EmotionalHealth, 342)}>{props.scores.EmotionalHealth.toFixed(1)}</h1>\r\n            <img src={petalForCH} className='absolute h-auto' style={place(props.scores.CognitiveHealth, 54)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.CognitiveHealth, 54)}>{props.scores.CognitiveHealth.toFixed(1)}</h1>\r\n            <img src={petalForSpH} className='absolute h-auto' style={place(props.scores.SpiritualHealth, 126)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.SpiritualHealth, 126)}>{props.scores.SpiritualHealth.toFixed(1)}</h1>\r\n            <img src={petalForSoH} className='absolute h-auto' style={place(props.scores.SocialHealth, 198)}/>\r\n            <h1 className='p-1 absolute rounded-full' style={write(props.scores.SocialHealth, 198)}>{props.scores.SocialHealth.toFixed(1)}</h1>\r\n        </div>\r\n    )}\r\n    return(\r\n        <div className='flex flex-col xl:flex-row justify-center items-center'>\r\n            <div className='pt-4 block xl:hidden'>\r\n                {// Petal graph (mobile)\r\n                graph()}\r\n            </div>\r\n            {\r\n                // Labels (left)\r\n            }\r\n            <div id='labels-left'>\r\n                <Label label={labels.PhysicalHealth} pos={{x:1,y:0}} score={props.scores.PhysicalHealth}/>\r\n                <Label label={labels.SocialHealth} pos={{x:2,y:1}} score={props.scores.SocialHealth}/>\r\n                <Label label={labels.SpiritualHealth} pos={{x:0,y:0}} score={props.scores.SpiritualHealth}/>\r\n            </div>\r\n            <div className='hidden xl:block'>\r\n                {// Petal graph (desktop)\r\n                graph()}\r\n            </div>\r\n            {\r\n                // Labels (right)\r\n            }\r\n            <div id='labels-right'>\r\n                <Label label={labels.EmotionalHealth} pos={{x:0,y:2}} score={props.scores.EmotionalHealth}/>\r\n                <Label label={labels.CognitiveHealth} pos={{x:0,y:1}} score={props.scores.CognitiveHealth}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Compile list of answers\r\nfunction Answers(props:{responses: questionnaire; scores: results;}){\r\n    var answers: Record<string, JSX.Element[]> = {\r\n        PhysicalHealth: [],\r\n        EmotionalHealth: [],\r\n        CognitiveHealth: [],\r\n        SpiritualHealth: [],\r\n        SocialHealth: []\r\n    };\r\n    var count = 1;\r\n    const scoreIcons = ['',s1,s2,s3,s4,s5];\r\n    for(const [key, value] of Object.entries(props.responses)){\r\n        console.log(value.score);\r\n        if(count > Object.entries(questions).length){\r\n            continue\r\n        } else {\r\n            answers[value.axis].push(\r\n                <tr key={key} className='m-2 p-2'>\r\n                    <td key={`${key}_id`} className='p-2 w-4'>{count}.</td>\r\n                    <td key={`${key}_score`} \r\n                        className={`p-2 w-8 rounded-l-full  ${value.score<3 ? 'bg-gray-100' : ''}`}>\r\n                        <img src={scoreIcons[value.score]} className='w-8 h-8'/>\r\n                    </td>\r\n                    <td key={`${key}_text`} \r\n                        className={`p-2 text-gray-800 rounded-r-full ${value.score<3 ? 'bg-gray-100' : ''}`}\r\n                        style={{whiteSpace: 'normal'}}\r\n                    >\r\n                            {value.text}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        count += 1;\r\n    } \r\n    return(\r\n        <div key={'t_responses'} className='m-2 p-2 text-left'>\r\n\r\n            <h1 id='PhysicalQs' className='p-2 text-lg text-white rounded' style={{background: labels.PhysicalHealth.color}}>\r\n                Physical Health\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.PhysicalHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.PhysicalHealth}</tbody></table>\r\n            \r\n            <h1 id='CognitiveQs' className='p-2 text-lg text-white rounded' style={{background: labels.CognitiveHealth.color}}>\r\n                Cognitive Health\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.CognitiveHealth.toFixed(1)}\r\n                </span>    \r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.CognitiveHealth}</tbody></table>\r\n\r\n            <h1 id='EmotionalQs' className='p-2 text-lg text-white rounded' style={{background: labels.EmotionalHealth.color}}>\r\n                Emotional Health\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.EmotionalHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.EmotionalHealth}</tbody></table>\r\n            \r\n            <h1 id='SocialQs' className='p-2 text-lg text-white rounded' style={{background: labels.SocialHealth.color}}>\r\n                Social Health\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.SocialHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.SocialHealth}</tbody></table>\r\n\r\n            <h1 id='SpiritualQs' className='p-2 text-lg text-white rounded' style={{background: labels.SpiritualHealth.color}}>\r\n                Spiritual Health\r\n                <span className='p-1 m-1 rounded-full' style={{color:'white', background:'black', display:'inline'}}>\r\n                    {props.scores.SpiritualHealth.toFixed(1)}\r\n                </span>\r\n            </h1>\r\n            <table className='m-2 p-4 w-full'><tbody>{answers.SpiritualHealth}</tbody></table>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Results(props:{\r\n    scores: results;\r\n    responses: questionnaire;\r\n    progress: number;\r\n    code: string;\r\n    onClick: {\r\n        viewMeasure: Function;\r\n        loadResults: Function;\r\n        generateCode: Function;\r\n    }\r\n}):JSX.Element {\r\n    const [graph, showGraph] = useState<boolean>(true);\r\n    const [responses, showResponses] = useState<boolean>(false);\r\n    const [newCode, setNewCode] = useState<string>('');\r\n\r\n    // Show results\r\n    if(props.progress<=1){ // If measure not finished\r\n        return(\r\n            <div className='flex flex-col justify-center items-center'>\r\n                <div className='m-2 p-8 rounded bg-white shadow-xl'>\r\n                    <h1 className='p-2 text-3xl text-gray-500'>\r\n                        Your results will be shown here!\r\n                    </h1>\r\n                    <button className='m-4 p-3 rounded-xl bg-green-600 text-white' onClick={()=>{props.onClick.viewMeasure()}}>\r\n                        <img src={petalLogo} className='mr-2 w-8 h-auto' style={{display: 'inline'}}/>\r\n                        Take your measure now\r\n                    </button>\r\n                    <h1 className='text-2xl font-medium'>OR</h1>\r\n                    <p>Enter a code to load previous results:</p>\r\n                    <input id='codeInput' className='m-2 p-2 rounded border' type=\"text\" name=\"code\"\r\n                        value = {newCode}\r\n                        onChange={(e) => {setNewCode(e.target.value)}}\r\n                    />\r\n                    <button className='m-2 p-2 rounded bg-gray-600 text-white' \r\n                        onClick={()=>{props.onClick.loadResults(newCode)}}>\r\n                        Load responses\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else { // If measure finished\r\n        return(\r\n            <div className='w-full flex flex-col justify-center items-center'>                \r\n                {\r\n                    // Save code\r\n                }\r\n                <div className='m-2 bg-white text-sm rounded-xl self-end flex flex-row justify-center align-center'>\r\n                    <button  className='p-2 rounded-xl bg-yellow-500 text-white' \r\n                        onClick={()=>{props.onClick.generateCode()}}>\r\n                        Save code\r\n                    </button>\r\n                    <p className='p-2'>{props.code}</p>\r\n                </div>\r\n\r\n                {\r\n                    // Graph\r\n                }    \r\n                <h1 className='p-4 text-3xl'>Your results</h1>\r\n                {graph ? <Graph scores={props.scores} /> : ''}\r\n\r\n                {\r\n                    // Answers\r\n                }\r\n                <div id='answers' className='m-2 p-4 bg-white rounded-xl'>\r\n                    <div className='p-2 flex flex-row justify-between items-center'>\r\n                        <h1 className='px-2 text-2xl'>Your answers</h1>\r\n                        <ToggleAnswersButton onClick={()=>{showResponses(!responses)}}/>\r\n                    </div>\r\n                    {responses ? <Answers responses={props.responses} scores={props.scores} /> : ''}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport './App.css';\r\n// Types\r\nimport {question, questionnaire, results} from './model/types';\r\n// Assets\r\nimport {questions} from './assets/questionnaire';\r\nimport logo from './assets/gfx/logo-fe.svg';\r\n// Views\r\nimport {Splash} from './templates/splash';\r\nimport {Questionnaire} from './templates/questionnaire';\r\nimport {Results} from './templates/results';\r\n\r\nconst App: React.FC = () => {\r\n  const [view, setView] = useState<'splash' | 'questionnaire' | 'results' >('splash');\r\n  const [recordedAnswers, recordAnswers] = useState<questionnaire>(questions);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [code, setCode] = useState<string>('');\r\n  const [showInstructions, setShowInstructions] = useState<boolean>(true);\r\n\r\n  const remainingQuestions = (): question[] => {\r\n    // Get array of unanswered questions\r\n    var unansweredQuestions: question[] = [];\r\n    for(const [key, value] of Object.entries(recordedAnswers)){\r\n      if(value.score===0){\r\n        unansweredQuestions.push(value);\r\n      }\r\n    }\r\n    return(unansweredQuestions);\r\n  }\r\n\r\n  const sample = (unansweredQuestions: question[]): question[] => {\r\n    // Set measure in progress\r\n    if(progress === 0){setProgress(1)};\r\n    \r\n    // Shuffle array and return upto 5 random objects\r\n    const shuffled = unansweredQuestions.sort(() => 0.5 - Math.random());\r\n    const n = Math.min(unansweredQuestions.length, 5);\r\n    return(shuffled.slice(0, n));\r\n  }\r\n\r\n  // Manage action on form continue button (continue or finish questionnaire)\r\n  const formContinueAction = (answers: question[]) => {\r\n\r\n    // Save answers\r\n    var newAnswer: questionnaire = JSON.parse(JSON.stringify(recordedAnswers)); // Clone existing results\r\n    for(const a of answers){ // Answer each question the user answered\r\n      newAnswer[a.id] = a; \r\n    };\r\n    recordAnswers(newAnswer); // Save answers\r\n\r\n    // Update progress\r\n    setProgress( (Object.entries(questions).length - remainingQuestions().length) / Object.entries(questions).length * 100 );\r\n\r\n    // Continue to results once finished\r\n    if(remainingQuestions().length === 0){\r\n      setView('results');\r\n    };\r\n  }\r\n\r\n  // Calculate score\r\n  function scoreResponses(): results{\r\n    const calcAve = (thisAxis:question[\"axis\"]) => {\r\n      let n=0;\r\n      let score=0;\r\n      for(const [key, value] of Object.entries(recordedAnswers)){\r\n        if(value.axis === thisAxis){\r\n          n+=1;\r\n          score+=value.score;\r\n        }\r\n      }\r\n      return score/n;\r\n    }\r\n    return({\r\n      PhysicalHealth: calcAve('PhysicalHealth'),\r\n      CognitiveHealth: calcAve('CognitiveHealth'),\r\n      EmotionalHealth: calcAve('EmotionalHealth'),\r\n      SocialHealth: calcAve('SocialHealth'),\r\n      SpiritualHealth: calcAve('SpiritualHealth')\r\n   });\r\n  }\r\n\r\n  // Encode scores\r\n  const leadingLetter = 'W';\r\n  const encodeResponses = ():string => { \r\n    var codeString = leadingLetter;\r\n    var copyOfAnswers:questionnaire = JSON.parse(JSON.stringify(recordedAnswers));\r\n    for(const [key, value] of Object.entries(copyOfAnswers)){\r\n      if(key !== 'undefined'){\r\n        codeString += value.score.toString();\r\n      } else {continue};\r\n    };\r\n    return codeString;\r\n  };\r\n  const codeLikelyValid = (codeString:string) => {\r\n    const lengthOfQuestionnaire = Object.entries(questions).length;\r\n    if(codeString.length!==(lengthOfQuestionnaire+1)){\r\n      alert(`Your code \"${codeString}\" was not ${lengthOfQuestionnaire} digits long. Valid codes are ${lengthOfQuestionnaire} digits long and are a series of numbers (0-5) starting with the character ${leadingLetter}. Please try again and contact support if the problem persists`)\r\n      return(false);\r\n    }\r\n    if(codeString[0]!==leadingLetter){\r\n      alert(`Your code \"${codeString}\" did not start with ${leadingLetter}. Valid codes are 35 digits long and are a series of numbers (0-5) starting with the character ${leadingLetter}. Please try again and contact support if the problem persists`)\r\n      return(false);\r\n    }\r\n    return(true)\r\n  }\r\n  const getResponsesFromCode = (codeString:string):questionnaire => {\r\n    var copyOfAnswers:questionnaire = JSON.parse(JSON.stringify(recordedAnswers));\r\n    for(let i = 1; i < codeString.length; i++){  // Skip leading character W\r\n      copyOfAnswers[`q${i}`].score = Number(codeString[i]);\r\n    }\r\n    return(copyOfAnswers);\r\n  }\r\n\r\n  const loadResponses = (codeString:string) => {\r\n    setCode(codeString);\r\n    if(codeLikelyValid(codeString)){\r\n      const newResponses = getResponsesFromCode(codeString);\r\n      recordAnswers(newResponses);\r\n      setProgress(100);\r\n      console.log('Restored responses from code:', codeString, 'to current results', recordedAnswers);\r\n    }\r\n  }\r\n\r\n  // Select view\r\n  const content = (): JSX.Element => {\r\n    switch(view){\r\n      case 'splash': return(\r\n        <Splash \r\n          onClick={{\r\n            start: ()=>{setView('questionnaire')}\r\n          }}\r\n        />\r\n      );\r\n      case 'questionnaire': return(\r\n        <Questionnaire \r\n          progress={progress}\r\n          showInstructions={showInstructions}\r\n          questions={sample( remainingQuestions() )}\r\n          onClick={{\r\n            dismissInstructions: ()=>{setShowInstructions(false)},\r\n            continue: (answers:question[]) => {formContinueAction(answers)},\r\n            back: ()=>{setView('results')}\r\n          }}\r\n        />\r\n      );\r\n      case 'results': return(\r\n        <Results \r\n          scores={scoreResponses()}\r\n          responses={recordedAnswers}\r\n          code={code}\r\n          progress={progress}\r\n          onClick={{\r\n            viewMeasure: ()=>{setView('questionnaire')},\r\n            loadResults: (newCode:string)=>{loadResponses(newCode)},\r\n            generateCode: () => {setCode( encodeResponses() )}\r\n          }}\r\n        />\r\n      );\r\n      default: return(<div>Error: Contact support</div>);\r\n    }\r\n  }\r\n\r\n  // Show view\r\n  return (\r\n    <div className=\"App h-full\">\r\n\r\n      {\r\n        // Navbar\r\n      }\r\n      <hr id='border-theme-top' className='border-2' style={{borderColor: '#C7D64F'}}/>\r\n      <nav className='p-2 flex flex-row justify-between items-end bg-white text-gray-500'>\r\n        <div id='nav-brand' className='flex flex-row justify-start items-end'>\r\n          <img src={logo} className='m-2 h-16 w-auto'/>\r\n          <h1 className='mx-2 p-1 text-3xl'>\r\n            Flourishing Online\r\n          </h1>\r\n        </div>\r\n        <div id='nav-links' className='text-sm'>\r\n          <button className='px-2 ' onClick={()=>{setView('splash')}}>Home</button>\r\n          <button className='px-2 border-l' style={{borderColor: '#C7D64F'}} onClick={()=>{setView('questionnaire')}}>Measure</button>\r\n          <button className='px-2 border-l' style={{borderColor: '#C7D64F'}} onClick={()=>{setView('results')}}>Results</button>\r\n          <a className='px-2 border-l' style={{borderColor: '#C7D64F'}} href='https://flourishingeducation.co.uk/' target='_blank'>About</a>\r\n        </div>\r\n      </nav>\r\n      <div id='progress-bar' \r\n        className='mb-4 p-2 bg-gray-100 flex flex-row justify-center items-center' \r\n        style={{display: progress>0&&progress<100 ? 'flex' : 'none'}}\r\n      >\r\n        <h1>Measure in progress:</h1>\r\n        <div className=\"m-2 h-4 w-3/4 max-w-xl rounded-xl shadow bg-gray-200\">\r\n            <div \r\n                className=\"h-full rounded-xl bg-wavy transition-all duration-1000\" \r\n                style={{width:`${progress}%`}}\r\n            />\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        // Current view\r\n        content()\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}